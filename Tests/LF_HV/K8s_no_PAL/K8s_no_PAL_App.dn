component provides App requires io.Output out, net.http.HTTPRequest http, data.IntUtil iu,
	time.Calendar calendar, time.DateUtil dateUtil, time.Timer timer {

	char url[]
	HTTPResponse response
	int average_response_time = 0
	int accumulated_response_time = 0
	int total_response_time = 0
	int total_requests = 0
	int temp_response_time1 = 0
	int request_counter = 0

	void notify_stackdriver() {
		average_response_time = accumulated_response_time/request_counter
		char average_response_time_str[] = iu.intToString(average_response_time)
		total_response_time = accumulated_response_time
		char url1[] = "http://35.223.19.202:8081/$(average_response_time_str)"
		out.println("\nbefore ....---: $(url1)")
		out.println("request_counter..: $(iu.intToString(request_counter))")
		out.println("average_response_time_str..: $(average_response_time_str)")
		response = http.get(url1, null)
		out.println("\nafter ....---:")		
		accumulated_response_time = 0
		average_response_time = 0
		request_counter = 0
	}	
		
	int App:main(AppParam params[]) {
		
		//================================================================================
 	 	// ---------- Getting data from Data Collector directly ----------------

		//url = "http://34.68.79.114:2020//collector/datafromresource/1"
		url = "http://35.184.118.160:2020//collector/resources/1/data"
		
		while(true) {
			timer.sleep(2000) 
			DateTime start = calendar.getTime()
 			response = http.get(url, null)
			DateTime end = calendar.getTime()
			DateTime diff = dateUtil.diff(start, end)		

			if (response == null) {
 				out.println("NULL ============================= NULL")
			} else {
				out.println("response.content..-----: $(response.content)")
				int response_time = dateUtil.toMilliseconds(diff)
				accumulated_response_time = accumulated_response_time + response_time
				request_counter++
				total_requests++
				if (request_counter == 15) {
					notify_stackdriver()
				} 
				out.println("resp.content..: $(response.content)")
				out.println("response_time..: $(iu.intToString(response_time))")
				out.println("accumulated_response_time..: $(iu.intToString(accumulated_response_time))")
				out.println("request_counter..: $(iu.intToString(request_counter))")
				out.println("============= total_requests..: $(iu.intToString(total_requests))")
				out.println("============= total_response_time..: $(iu.intToString(total_response_time))")
			}	
			
 		}
	 	return 0
  	}
}
