uses data.String

/* data ResourceCapabilitiesToBeSendToApplication {
	char id[]
	char name[]
	char function[]
	char description[]
}

data ResponseToApplication {
	ResourceCapabilitiesToBeSendToApplication resourceCapabilitiesToBeSendToApplication[]
} */



data ResourceCapabilitiesToBeSendToApplication {
	char id[]
	char name[]
	char function[]
	char description[]
}

data FinalResponse {
	ResourceCapabilitiesToBeSendToApplication resourceCapabilitiesToBeSendToApplication[]
}

data ResponseToApplication {
	FinalResponse resp
}



data ResourceMetaData {
	char uuid[]
	char description[]
	String capabilities[]
	char status[]
	dec lat
	dec lon
}

data InterSCityData {
	ResourceMetaData data_
}


data ResponseToResource {
	char response[]
	char uuid[]
	char device[]
	char description[]
	String capabilities[]
  char status[]
  dec lat
  dec lon
  char country[]
  char state[]
  char city[]
  char neighborhood[]
  char postal_code[]
  char created_at[]
  char updated_at[]
  int id
}

component provides App requires net.http.HTTPRequest request, data.json.JSONEncoder encoder, io.Output out,
															data.IntUtil iu, data.DecUtil du, data.json.JSONParser parser, time.Timer timer {

	int App:main(AppParam params[]) {
		char url[]
		HTTPResponse response

		out.println("Accessing Data Collector...")
		//================================================================================
		// ---------- Sending data to Data Collector directly ----------------

		char jsonBus_DataToBeSent[] = new char[]("{",
		"\"data\": {",
				"\"public_bus\": [",
					"{",
						"\"location\": {",
							"\"lat\": -10.00032,",
							"\"lon\": -23.559615",
							"},",
						"\"speed\": 54,",
						"\"uuid\": 1,",
						"\"bus_line\": \"875c-10-1\",",
						"\"timestamp\": \"2017-06-14T17:52:25.428Z\"",
					"}",
				"]",
			"}",
		"}")


		for(int i = 0; i < 2; i++) {   //while (true) {
			out.println("Sending data to the InterSCity Platform...")
			//out.println("Sent UUID: $(formatedResponse.uuid)")

			url = "http://34.68.79.114:2020/collector/data/1"
			//url = "http://35.239.83.45:2020/collector/data/1"
			//url = "http://localhost:2020/collector/data/1"
	 		Header headers[] = null
	 		//HTTPResponse response = request.post(url, null, content)

			//url = "http://localhost:2018/adaptor/resources/$(formatedResponse.uuid)/data"
			response = request.post(url, null, jsonBus_DataToBeSent)
			if((response.headers[0].value) == "HTTP/1.1 200 OK") { out.println("Data sent successfully6666777777!") }
			 //timer.sleep(6000)
		}


		//================================================================================
 	 	// ---------- Getting data from Data Collector directly ----------------

		for(int i = 0; i < 10000; i++) {

		//while(true) {
 			//url = "http://localhost:2020//collector/datafromresource/$(formatedResponse.uuid)"
 			//url = "http://localhost:2020//collector/datafromresource/1"
			//url = "http://35.239.83.45:2020//collector/datafromresource/1"
			url = "http://34.68.79.114:2020//collector/datafromresource/1"
 			response = request.get(url, null)
 			//timer.sleep(1000)   //100 = 100 miliseconds
 			//out.println("Data received 1:")
 			//char resp[] = iu.intToString(response.content)
 			out.println("response.content 12345..: $(response.content)")
			out.println("iteration..: $(iu.intToString(i))")
 		}


	 	return 0
  }





	/* int App:main(AppParam params[]) {
		out.println("Accessing the Resource Discovery...")
		out.println("Searching for resources which have the ability to monitor public bus in the city...")
		//char url[] = "http://localhost:2021/discovery/resources?capability=environment_monitoring"
		//char url[] = "http://localhost:2021/discovery/resources?capability=temperature"
		//char url[] = "http://localhost:2021/discovery/resources?capability=humidity"
		//char url[] = "http://localhost:2021/discovery/resources?capability=traffic_light"
		//char url[] = "http://localhost:2021/discovery/resources?capability=university_campus"
		char url[] = "http://localhost:2021/discovery/resources?capability=public_bus"
		//char url[] = "http://localhost:2021/discovery/resources?capability=collected_garbage_monitoring"

		HTTPResponse response = request.get(url, null)

		// Composing response message to Resource Adaptor Microservice
		// Showing received values of InterSCity Platform
		ResponseToResource formatedResponse = encoder.jsonToData(response.content, typeof(ResponseToResource), null)
		out.println("Received values from InterSCity Platform:")
		out.println("UUID:.........$(formatedResponse.uuid)")
		out.println("DESCRIPTION:..$(formatedResponse.description)")


		//ResponseToApplication resp = encoder.jsonToData(response.content, typeof(ResponseToApplication), null)
		//response = request.get("localhost:2018/resource/test2/list", null)
		out.println("Discovered resources:")
		out.println("response.content: $(response.content)")

		//Get data from Data Collector
		out.println("Accessing the Data collector...")
		out.println("Getting resource data...")

		//
		for(int i = 0; i < 50000; i++) {
			//url = "http://localhost:2020//collector/datafromresource/$(formatedResponse.uuid)"
			url = "http://130.211.119.145:2020//collector/datafromresource/$(formatedResponse.uuid)"
			response = request.get(url, null)
			timer.sleep(1000)   //100 = 100 miliseconds
			out.println("Data received:")
			out.println("response.content..: $(response.content)")
		}


		return 0
	} */

}
